name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      JAVA_TOOL_OPTIONS: "-Xmx1g"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Configure Android SDK path
        run: |
          echo "ANDROID_HOME=$RUNNER_TEMP/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=" >> $GITHUB_ENV

      - name: Install Android SDK command-line tools and platform/build-tools
        run: |
          mkdir -p "$ANDROID_HOME/cmdline-tools"
          cd "$ANDROID_HOME"
          # 下面這個 URL 可能需更新為最新 commandlinetools 版本，如果失敗請到官方拿最新下載連結替換
          curl -fSL "https://dl.google.com/android/repository/commandlinetools-linux-10925496_latest.zip" -o cmdline.zip
          unzip -q cmdline.zip -d cmdline-tools
          mv cmdline-tools/cmdline-tools cmdline-tools/latest
          yes | "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$ANDROID_HOME" --licenses
          "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$ANDROID_HOME" "platform-tools" "platforms;android-33" "build-tools;33.0.1"

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-cache-${{ runner.os }}-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties') }}
          restore-keys: gradle-cache-${{ runner.os }}-

      - name: Build Debug APK
        run: ./gradlew assembleDebug --no-daemon

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: acscan-apk
          path: app/build/outputs/apk/debug/app-debug.apk
